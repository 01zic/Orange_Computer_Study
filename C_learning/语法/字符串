字符串知识点：
1.概念：字符串是以空字符'\0'结尾的char类型数组，'\0'字符是标记字符串末尾的字符可以用于判断
2.字符串字面量（字符串常量）：用双引号括起来的内容，其中的字符和编译器自动加入的'\0'字符都作为字符串储存在内存中
3.如果要在字符串内部使用双引号必须在双引号前面加一个反斜杠\
4.字符串常量属于静态存储类别，该字符串在整个程序运行期间只会存储一次
5.如果在字符数组的最后面加上'\0'就是字符串了，否则就是一个字符数组
6.可以用指针来操作字符串，字符数组名和其他数组名一样是数组首元素的地址
7.指针表示法和字符数组表示法都可以创建字符串
8.初始化字符数组是把静态存储区的数组拷贝到数组中，初始化指针是把字符串的首字符的地址拷贝给指针，数组储存的是字符串字面量的副本（被储存了两次），指针初始化所用的是字符串字面量的位置
9.初始化字符数组和初始化指针都可以使用数组表示法，都可以使用指针加法，但是只有初始化指针指向字符串才可以使用递增递减操作
10.如果打算修改字符串字面量的值，就不要用指针指向字符串字面量
11.在使用指针指向字符串字面量的时候建议使用const来表明指针指向的字符串不能修改
12.修改字符数组元素的时候使用''而不是""
13.字符数组可以用指定的字符串和双引号""来初始化为一个字符串，如果用数组初始化则需要大括号{}和'\0'来初始化为一个字符串

字符串数组：
1.字符串数组初始化：指向字符串的指针数组和指向char类型数组的数组，例如char *a[N],char a[N][N]都可以用来创建字符串数组
2.如果要用数组表示一系列待显示的字符串，使用指针数组，效率高，如果要改变字符串或者为字符串预留空间，则使用指向char类型数组的数组
3.变量名加一个下标表示字符串，两个下标表示某个字符串的某个字符元素

字符串的输入与输出：
1.必须分配空间，可以是定义数组的时候初始化数组的大小，也可以是定义指向字符串的指针的时候动态分配内存
2.标准输入函数fgets(char *_Buffer, int _MaxCount, FILE *_Stream)，字符类型指针，第二个参数是输入的字符最大数，直到读到第一个换行符为止并储存在字符串中，第三个参数是文件名/标准输入stdin
3.fgets()函数读到文件结尾（返回一个NULL）或者空行（首字符是换行符\n）为止，while(fgets(char *_Buffer, int _MaxCount, FILE *_Stream)!=NULL&&_BUffer[0]!='\n')
4.fgets()函数成功读取的返回值是参数指针，否则返回NULL
5.fputs(const char *_Buffer, FILE *_Stream)
6.fegts()函数，当输入超过数组可容纳的最大字符数时，可以选择不同的处理方式，可以让程序继续使用超出部分的字符，也可以编写代码来处理超出部分的字符（舍弃）
7.gets_s只从标准输入里面读取数据，读到换行符会舍弃和gets一样
8.scanf输入字符串会从第一个非空字符作为字符串的开始，以下一个空白字符（空格，空行，制表符或换行符）作为字符串的结束，如果指定了字段宽度，那么将第字段宽度个字符或者空白字符作为字符串的结束

字符串函数：
1.strlen()用于统计字符串长度的函数
2.strcat()用于拼接两个字符串，把第二个字符串的备份附加在第一个字符串末尾，把新形成的字符串作为第一个字符串，第二个字符串不变（现在不建议使用了）
3.strcat_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source)第二个参数是目标缓冲区大小
4.strncat(char *_Destination, const char *_Source, size_t _Count)第三个参数是连接数
5.strncat_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source, rsize_t _MaxCount)第二个参数是目标缓冲区大小，第四个参数是最大连接数
6.strcmp(const char *_Str1, const char *_Str2)字符串比较函数，它比较传入的两个字符串，会依次比较每个字符，直到发现第一对不同的字符，按照这对字符的ASCII值的大小关系返回值
如果ASCII的值相等则返回0，否则返回非0值
7. strncmp(const char *_Str1, const char *_Str2, size_t _MaxCount)，可以只比较第三个参数指定的字符数
8.strcpy(char *_Destination, const char *_Source)将第二个字符串复制给第一个，要注意第一个对象要有足够大的空间（现在不建议使用了），它返回的类型是char*，返回的是第一个参数的值就是第一个
参数的地址，第一个参数也不一定指向数组的地址（指针加减）
9.strcpy_s(char *_Destination, rsize_t _SizeInBytes, const char *_Source)。第二个参数表示了复制多大的字节
10.strncpy(char *_Destination, const char *_Source, size_t _Count)第三个参数是需要拷贝的字符数，在拷贝字符串的末尾添加一个空字符
11.sprintf(char *_Buffer, const char *_Format, ...)类似于printf()比printf()多了一个参数，第一个参数是目标数组，将后面的东西组合写入这个数组，返回值是字符串长度
